{"version":3,"sources":["webpack:///src/app/card-list/card-list.page.html","webpack:///src/app/card-list/card-list-routing.module.ts","webpack:///src/app/card-list/card-list.module.ts","webpack:///src/app/card-list/card-list.page.scss","webpack:///src/app/card-list/card-list.page.ts"],"names":["routes","path","component","CardListPageRoutingModule","imports","forChild","exports","CardListPageModule","declarations","CardListPage","apiService","route","modalCtrl","navCtrl","userId","JSON","parse","localStorage","getItem","console","log","getCards","id","parm","navigateForward","subscribe","data","cards","getSharedCard","length","flag1","err","statusText","getSharedCards","yourcards","flag2","create","cssClass","componentProps","modal","onDidDismiss","then","ngOnInit","present","selector","template"],"mappings":"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","file":"card-list-card-list-module-es5.js","sourcesContent":["export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-buttons slot=\\\"start\\\">\\r\\n      <ion-menu-button></ion-menu-button>\\r\\n    </ion-buttons>\\r\\n    <ion-title>CardList</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <ion-item-group>\\r\\n  <ion-item-divider>\\r\\n    <ion-label>\\r\\n      Your cards\\r\\n    </ion-label>\\r\\n  </ion-item-divider>\\r\\n  <ion-label *ngIf=\\\"!flag1\\\" style=\\\"text-align: center;\\\">----   no cards added   ----</ion-label>\\r\\n  <ion-list *ngFor=\\\"let item of cards\\\">\\r\\n    <ion-item lines=\\\"none\\\" style=\\\"border-bottom: 1px solid #dbdada;\\\">\\r\\n      <ion-label class=\\\"ion-text-wrap\\\" (click)=\\\"viewCard(item._id)\\\">\\r\\n        <ion-text color=\\\"primary\\\">\\r\\n          <h1  style=\\\"font-size: 20px;\\\"><b>Full Name : </b> {{item.card.name}} {{item.card.surname}}</h1>\\r\\n        </ion-text>\\r\\n        <!-- <p>{{item.card.cellNo}}</p> -->\\r\\n        <ion-text color=\\\"secondary\\\">\\r\\n          <p><b>Workplace : </b>{{item.card.Workplace}}</p>\\r\\n        </ion-text>\\r\\n      </ion-label>\\r\\n      <ion-button fill=\\\"outline\\\" slot=\\\"end\\\" (click)=\\\"presentModal(item._id)\\\">Edit</ion-button>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  </ion-item-group>\\r\\n  <ion-item-group>\\r\\n  <ion-item-divider>\\r\\n    <ion-label>\\r\\n      Your Shared cards\\r\\n    </ion-label>\\r\\n  </ion-item-divider>\\r\\n  <ion-label *ngIf=\\\"!flag2\\\" style=\\\"text-align: center;\\\">----   no cards added   ----</ion-label>\\r\\n  <ion-list *ngFor=\\\"let item of yourcards\\\">\\r\\n    <ion-item lines=\\\"none\\\" style=\\\"border-bottom: 1px solid #dbdada;\\\">\\r\\n      <ion-label class=\\\"ion-text-wrap\\\" (click)=\\\"sharedviewCard(item._id)\\\">\\r\\n        <ion-text color=\\\"primary\\\">\\r\\n          <h1  style=\\\"font-size: 20px;\\\"><b>Full Name : </b> {{item.card.name}} {{item.card.surname}}</h1>\\r\\n        </ion-text>\\r\\n        <!-- <p>{{item.card.cellNo}}</p> -->\\r\\n        <ion-text color=\\\"secondary\\\">\\r\\n          <p><b>Workplace : </b>{{item.card.Workplace}}</p>\\r\\n        </ion-text>\\r\\n      </ion-label>\\r\\n    </ion-item>\\r\\n  </ion-list>\\r\\n  </ion-item-group>\\r\\n</ion-content>\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { CardListPage } from './card-list.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CardListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CardListPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CardListPageRoutingModule } from './card-list-routing.module';\r\n\r\nimport { CardListPage } from './card-list.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    CardListPageRoutingModule\r\n  ],\r\n  declarations: [CardListPage]\r\n})\r\nexport class CardListPageModule {}\r\n","export default \".item-label {\\n  padding-left: 0 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY2FyZC1saXN0L0U6XFxpb25pY1xcZXhjaGFuZ2UtYnVzc2luZXNzLWNhcmQvc3JjXFxhcHBcXGNhcmQtbGlzdFxcY2FyZC1saXN0LnBhZ2Uuc2NzcyIsInNyYy9hcHAvY2FyZC1saXN0L2NhcmQtbGlzdC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDQSwwQkFBQTtBQ0NBIiwiZmlsZSI6InNyYy9hcHAvY2FyZC1saXN0L2NhcmQtbGlzdC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaXRlbS1sYWJlbCB7XHJcbnBhZGRpbmctbGVmdDogMCAhaW1wb3J0YW50O1xyXG59IiwiLml0ZW0tbGFiZWwge1xuICBwYWRkaW5nLWxlZnQ6IDAgIWltcG9ydGFudDtcbn0iXX0= */\";","import { Component, OnInit, ComponentFactoryResolver } from '@angular/core';\r\nimport { ApiService } from '../service/api/api.service';\r\nimport { Router } from '@angular/router';\r\nimport { NavController } from '@ionic/angular';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { EditCardPage } from '../edit-card/edit-card.page'\r\n@Component({\r\n  selector: 'app-card-list',\r\n  templateUrl: './card-list.page.html',\r\n  styleUrls: ['./card-list.page.scss'],\r\n})\r\nexport class CardListPage implements OnInit {\r\n\r\n  userId;\r\n  public cards;\r\n  public yourcards : any[] ;\r\n  flag1;\r\n  flag2;\r\n\r\n  constructor(public apiService: ApiService,\r\n    private route: Router,\r\n    public modalCtrl: ModalController,\r\n    public navCtrl: NavController    ) { \r\n  //   this.cardname = [{\r\n  //     name : \"zain\",\r\n  //    number : \"03122880329\",\r\n  //    email : \"zain@gmail.com\",\r\n  //    place : \"malir\"\r\n  //  },{\r\n  //     name : \"basit\",\r\n  //    number : \"03122880329\",\r\n  //    email : \"basit@gmail.com\",\r\n  //    place : \"malir\"\r\n  //  },{\r\n  //     name : \"arij\",\r\n  //    number : \"03122880329\",\r\n  //    email : \"arij@gmail.com\",\r\n  //    place : \"nazimabad\"\r\n  //  },{\r\n  //     name : \"kamran\",\r\n  //    number : \"03122880329\",\r\n  //    email : \"kamran@gmail.com\",\r\n  //    place : \"safora\"\r\n  //  }] \r\n\r\n    this.userId = JSON.parse(localStorage.getItem('userId'));\r\n    console.log('userId', this.userId);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getCards();\r\n\r\n  }\r\n  sharedviewCard(id){\r\n    console.log(id);\r\n    let parm = \"shared\";\r\n    this.navCtrl.navigateForward(['shared-card-view/']+id+'/'+parm);\r\n  }\r\n\r\n  viewCard(id){\r\n    console.log(id);\r\n    let parm = \"own\";\r\n    this.navCtrl.navigateForward(['card-view/']+id+'/'+parm);\r\n    // this.route.navigate(['view-card',{id:id}])\r\n    // this.navCtrl.back();\r\n  }\r\n\r\n  getCards() {\r\n\r\n    this.apiService.getCards(this.userId)\r\n    .subscribe((data:any) => //Start Service\r\n    {\r\n      console.log(data);\r\n      this.cards = data;\r\n      this.getSharedCard();\r\n      if (this.cards.length > 0)\r\n      this.flag1 = true;\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      console.log(err.statusText);\r\n    });\r\n  }\r\n  async getSharedCard(){\r\n    await this.apiService.getSharedCards(this.userId)\r\n    .subscribe((data:any) => //Start Service\r\n    {\r\n      console.log('shared',data);\r\n      this.yourcards = data;\r\n      if (this.yourcards.length > 0 )\r\n      this.flag2 = true;\r\n      // for(var i = 0 ; i < data.length; i++){\r\n      //   console.log('asdasd');\r\n      //   this.cards.push(data[i]);\r\n      // }\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      console.log(err.statusText);\r\n    });\r\n    console.log('after',this.cards);\r\n  }\r\n  \r\n\r\n  // editCard(cardId) {\r\n  //   console.log(\"editCard run\");\r\n  //   console.log(\"cardId \", cardId);\r\n  //   this.navCtrl.navigateForward(['edit-card/']+cardId);\r\n  // }\r\n\r\n  async presentModal(id) {\r\n    const modal = await this.modalCtrl.create({\r\n\r\n      component: EditCardPage,\r\n      cssClass: 'my-custom-class',\r\n      componentProps: { \r\n        id: id\r\n      }\r\n\r\n    });\r\n    modal.onDidDismiss()\r\n      .then( (data) => {\r\n        this.ngOnInit();\r\n        console.log(\"hello again\")\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n}\r\n"]}