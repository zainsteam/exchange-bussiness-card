{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-4b76b5c3.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-3f0b0c04.js","./src/app/add-manual-card/add-manual-card.page.html","./src/app/edit-card/edit-card.page.html","./src/app/add-manual-card/add-manual-card.page.scss","./src/app/add-manual-card/add-manual-card.page.ts","./src/app/edit-card/edit-card.page.scss","./src/app/edit-card/edit-card.page.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAe,yPAA0L,kBAAkB,2GAA2G,qfAAqf,oBAAoB,iBAAiB,2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","file":"common-es2015.js","sourcesContent":["import { w as writeTask } from './index-29df6f59.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\"> \\r\\n    <ion-title>Add Card</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-buttons fill=\\\"clear\\\" style=\\\"font-size: 12px;padding-left: 5px;\\\" (click)=\\\"cerrar()\\\" >\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\" style=\\\"margin-right: 8px;font-size: 23px\\\"></ion-icon>\\r\\n     </ion-buttons>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"cardAddForm\\\" (ngSubmit)=\\\"cardAdd()\\\">\\r\\n    <ion-list class=\\\"ion-margin-horizontal\\\" no-margin>\\r\\n\\r\\n      <!-- <ion-item class=\\\"listItem\\\" no-lines >\\r\\n        <ion-label position=\\\"stacked\\\" class=\\\"listLabel\\\" style=\\\"\\\">Name</ion-label> -->\\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Name\\\" style=\\\"border:1px solid #888888;border-radius: 22px;margin-top: 10px;\\\" formControlName=\\\"name\\\" value=\\\"\\\" class=\\\"listInput\\\"></ion-input>\\r\\n      <!-- </ion-item> -->\\r\\n\\r\\n\\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Surname\\\" style=\\\"border:1px solid #888888;border-radius: 22px;margin-top: 10px;\\\"  formControlName=\\\"surname\\\" value=\\\"\\\" class=\\\"listInput\\\"></ion-input>\\r\\n     \\r\\n        <ion-input type=\\\"text\\\" placeholder=\\\"Workplace\\\" style=\\\"border:1px solid #888888;border-radius: 22px;margin-top: 10px;\\\"  formControlName=\\\"workplace\\\" value=\\\"\\\" class=\\\"listInput\\\"></ion-input>\\r\\n\\r\\n        <ion-input type=\\\"email\\\" placeholder=\\\"Email\\\" style=\\\"border:1px solid #888888;border-radius: 22px;margin-top: 10px;\\\"  formControlName=\\\"email\\\" value=\\\"\\\" class=\\\"listInput\\\"></ion-input>\\r\\n\\r\\n        <ion-input type=\\\"number\\\" placeholder=\\\"Cell no\\\" style=\\\"border:1px solid #888888;border-radius: 22px;margin-top: 10px;\\\"  formControlName=\\\"cellNo\\\" class=\\\"listInput\\\"></ion-input>\\r\\n\\r\\n    </ion-list>\\r\\n    <ion-row style=\\\"justify-content: center;margin-top: 2%;\\\">\\r\\n    <ion-checkbox  formControlName=\\\"cellNoSharing\\\" ></ion-checkbox> <ion-label style=\\\"margin-left: 10px;\\\">Shared Phone Number</ion-label>\\r\\n  </ion-row  >\\r\\n   \\r\\n    <ion-row style=\\\"justify-content: center;margin-top: 5%;\\\">\\r\\n      <ion-button class=\\\"custom-buttom\\\" type=\\\"submit\\\" shape=\\\"round\\\" [disabled]=\\\"!cardAddForm.valid\\\">\\r\\n        ADD CARD\\r\\n      </ion-button>\\r\\n    </ion-row>\\r\\n\\r\\n  </form>\\r\\n<!-- \\r\\n  <ion-row style=\\\"justify-content: center;margin-top: 5%;\\\">\\r\\n    <ion-button class=\\\"custom-buttom\\\" type=\\\"button\\\" shape=\\\"round\\\" (click)=\\\"saveContact()\\\">\\r\\n      Save Card\\r\\n    </ion-button>\\r\\n  </ion-row> -->\\r\\n</ion-content>\\r\\n\";","export default \"<ion-header>\\r\\n  <ion-toolbar color=\\\"primary\\\">\\r\\n    <ion-title>Edit Card</ion-title>\\r\\n    <ion-buttons slot=\\\"end\\\">\\r\\n      <ion-buttons fill=\\\"clear\\\" style=\\\"font-size: 12px;padding-left: 5px;\\\" (click)=\\\"cerrar()\\\" >\\r\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"close\\\" style=\\\"margin-right: 8px;font-size: 23px\\\"></ion-icon>\\r\\n     </ion-buttons>\\r\\n    </ion-buttons>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <ion-list class=\\\"ion-margin-horizontal\\\" no-margin>\\r\\n\\r\\n        <ion-input [(ngModel)]=\\\"card.name\\\" type=\\\"text\\\"  placeholder=\\\"Name\\\" style=\\\"border:1px solid #888888;border-radius: 22px;margin-top: 10px;\\\" value=\\\"\\\" class=\\\"listInput\\\" ></ion-input>\\r\\n\\r\\n        <ion-input [(ngModel)]=\\\"card.surname\\\" type=\\\"text\\\" placeholder=\\\"Surname\\\" style=\\\"border:1px solid #888888;border-radius: 22px;margin-top: 10px;\\\"   value=\\\"\\\" class=\\\"listInput\\\"></ion-input>\\r\\n     \\r\\n        <ion-input [(ngModel)]=\\\"card.Workplace\\\" type=\\\"text\\\" placeholder=\\\"Workplace\\\" style=\\\"border:1px solid #888888;border-radius: 22px;margin-top: 10px;\\\" value=\\\"\\\" class=\\\"listInput\\\"></ion-input>\\r\\n\\r\\n        <ion-input [(ngModel)]=\\\"card.email\\\" type=\\\"email\\\" placeholder=\\\"Email\\\" style=\\\"border:1px solid #888888;border-radius: 22px;margin-top: 10px;\\\"   value=\\\"\\\" class=\\\"listInput\\\"></ion-input>\\r\\n\\r\\n        <ion-input [(ngModel)]=\\\"card.cellNo\\\" type=\\\"number\\\" placeholder=\\\"Cell no\\\" style=\\\"border:1px solid #888888;border-radius: 22px;margin-top: 10px;\\\"   class=\\\"listInput\\\"></ion-input>\\r\\n\\r\\n    </ion-list>\\r\\n\\r\\n    <ion-row style=\\\"justify-content: center;margin-top: 2%;\\\">\\r\\n      <ion-checkbox  [(ngModel)]=\\\"card.cellNoSharing\\\" ></ion-checkbox> <ion-label style=\\\"margin-left: 10px;\\\">Shared Phone Number</ion-label>\\r\\n    </ion-row  >\\r\\n\\r\\n    <ion-row style=\\\"justify-content: center;margin-top: 5%;\\\">\\r\\n      <ion-button class=\\\"custom-buttom\\\" type=\\\"submit\\\" shape=\\\"round\\\"  (click)=\\\"update()\\\">\\r\\n        UPDATE CARD\\r\\n      </ion-button>\\r\\n    </ion-row>\\r\\n\\r\\n</ion-content>\\r\\n\";","export default \".native-input {\\n  padding-left: 18px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWRkLW1hbnVhbC1jYXJkL0U6XFxleGNoYW5nZS1idXNzaW5lc3MtY2FyZC9zcmNcXGFwcFxcYWRkLW1hbnVhbC1jYXJkXFxhZGQtbWFudWFsLWNhcmQucGFnZS5zY3NzIiwic3JjL2FwcC9hZGQtbWFudWFsLWNhcmQvYWRkLW1hbnVhbC1jYXJkLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDZCQUFBO0FDQ0oiLCJmaWxlIjoic3JjL2FwcC9hZGQtbWFudWFsLWNhcmQvYWRkLW1hbnVhbC1jYXJkLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXRpdmUtaW5wdXR7XHJcbiAgICBwYWRkaW5nLWxlZnQ6IDE4cHggIWltcG9ydGFudDtcclxufSIsIi5uYXRpdmUtaW5wdXQge1xuICBwYWRkaW5nLWxlZnQ6IDE4cHggIWltcG9ydGFudDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from '../service/api/api.service';\r\nimport { Router } from '@angular/router';\r\n// import { Contacts} from '@ionic-native/contacts';\r\nimport { Contacts, Contact, ContactField, ContactName, ContactAddress } from '@ionic-native/contacts/ngx';\r\nimport { Toast } from '@ionic-native/toast/ngx';\r\n\r\n@Component({\r\n  selector: 'app-add-manual-card',\r\n  templateUrl: './add-manual-card.page.html',\r\n  styleUrls: ['./add-manual-card.page.scss'],\r\n})\r\nexport class AddManualCardPage implements OnInit {\r\n\r\n  user;\r\n  userId;\r\n\r\n  public cardAddForm: FormGroup;\r\n  errorMessage: string = '';\r\n  successMessage: string = '';\r\n  loading;\r\n  card;\r\n\r\n  constructor(public modalCtrl: ModalController,\r\n    public apiService: ApiService,\r\n    public formBuilder: FormBuilder,\r\n    private route: Router,\r\n    private toast: Toast,\r\n    private contacts: Contacts,\r\n  ) {\r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n    console.log('user', this.user);\r\n\r\n    this.userId = JSON.parse(localStorage.getItem('userId'));\r\n    console.log('userId', this.userId);\r\n\r\n    this.cardAddForm = formBuilder.group({\r\n      name: ['', Validators.compose([Validators.required])],\r\n      surname: ['', Validators.compose([Validators.required])],\r\n      workplace: ['', Validators.compose([])],\r\n      email: ['', Validators.compose([Validators.pattern('[a-zA-Z0-9.-_]{1,}@[a-zA-Z.-]{2,}[.]{1}[a-zA-Z]{2,}')])],\r\n      cellNo: [''],\r\n      cellNoSharing:[true]\r\n    });\r\n  }\r\n\r\n \r\n\r\n  saveContact(card) {\r\n    // let contact: Contact = this.contacts.create();\r\n\r\n    // contact.name = new ContactName(null, 'Smith', 'John');\r\n    // contact.phoneNumbers = [new ContactField('mobile', '6471234567')];\r\n    // contact.save().then(\r\n    //   async() => await console.log('Contact saved!', contact));\r\n    console.log('save card',card);\r\n    \r\n\r\n      let contact: Contact = this.contacts.create();\r\n\r\n      contact.name = new ContactName(null, card['card'].name, card['card'].surname);\r\n      contact.phoneNumbers = [new ContactField('mobile', card['card'].cellNo)];\r\n      contact.emails = [new ContactField('emails', card['card'].email)];\r\n      contact.addresses = [new ContactAddress(true,'work',card['card'].Workplace)];\r\n\r\n      contact.save().then(\r\n        () => console.log('Contact saved!', contact),\r\n        (error: any) => console.error('Error saving contact.', error)\r\n      );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  cerrar() {\r\n\r\n    this.modalCtrl.dismiss();\r\n  }\r\n\r\n  async cardAdd() {\r\n    console.log(\"cardAdd Method\");\r\n\r\n    const data = {\r\n      name: this.cardAddForm.value.name,\r\n      surname: this.cardAddForm.value.surname,\r\n      workplace: this.cardAddForm.value.workplace,\r\n      userId: this.userId,\r\n      email: this.cardAddForm.value.email,\r\n      cellNo: this.cardAddForm.value.cellNo,\r\n      cardType: \"type3\",\r\n      cellNoSharing:this.cardAddForm.value.cellNoSharing,\r\n    }\r\n    console.log(data);\r\n\r\n    this.apiService.cardAdd(data)\r\n      .subscribe((data: any) => //Start Service\r\n      {\r\n        console.log(data);\r\n        this.toast.show(`Card Successfully Added `, '5000', 'bottom').subscribe(\r\n          toast => {\r\n            console.log(toast);\r\n          }\r\n        );\r\n        this.saveContact(data);\r\n        this.cerrar();\r\n\r\n      },\r\n        err => {\r\n          console.log(err);\r\n          console.log(err.statusText);\r\n        });\r\n\r\n    await this.route.navigateByUrl('/card-list');\r\n\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VkaXQtY2FyZC9lZGl0LWNhcmQucGFnZS5zY3NzIn0= */\";","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController, NavParams } from '@ionic/angular';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ApiService } from '../service/api/api.service';\r\nimport { Router ,ActivatedRoute} from '@angular/router';\r\n// import { Contacts} from '@ionic-native/contacts';\r\nimport { Contacts, Contact, ContactField, ContactName, ContactAddress } from '@ionic-native/contacts/ngx';\r\nimport { async } from '@angular/core/testing';\r\nimport { Toast } from '@ionic-native/toast/ngx';\r\n\r\n@Component({\r\n  selector: 'app-edit-card',\r\n  templateUrl: './edit-card.page.html',\r\n  styleUrls: ['./edit-card.page.scss'],\r\n})\r\nexport class EditCardPage implements OnInit {\r\n  user;\r\n  userId;\r\n\r\n  public cardEditForm: FormGroup;\r\n  errorMessage: string = '';\r\n  successMessage: string = '';\r\n  loading;\r\n  public sub;\r\n  id: any;\r\n  cardid : any;\r\n  public card : any[] ;\r\n  cellNoSharing:boolean=false;\r\n\r\n  constructor(public apiService: ApiService,\r\n    public formBuilder: FormBuilder,\r\n    private route: Router,\r\n    private router: ActivatedRoute,\r\n    public modalCtrl: ModalController,\r\n    private contacts: Contacts,\r\n    private toast: Toast,\r\n    public navParams: NavParams) { \r\n     \r\n    this.user = JSON.parse(localStorage.getItem('user'));\r\n    console.log('user', this.user);\r\n\r\n    this.userId = JSON.parse(localStorage.getItem('userId'));\r\n    console.log('userId', this.userId);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    // this.sub = this.router.params.subscribe(params => {\r\n    //   this.id = params['id'];\r\n    // });\r\n    console.log(this.id);\r\n    const id: string = this.navParams.get('id');\r\n    console.log(id);\r\n    this.viewCard(id);\r\n  }\r\n  \r\n\r\n  viewCard(ids) {\r\n    console.log(ids);\r\n    \r\n    this.apiService.getCard(ids)\r\n    .subscribe((data:any) => //Start Service\r\n    {\r\n      this.cardid = data[0]['_id'];\r\n      this.card = data[0]['card'];\r\n      console.log(this.card);\r\n    },\r\n    err => {\r\n      console.log(err);\r\n      console.log(err.statusText);\r\n    });\r\n  }\r\n\r\n  cerrar() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n\r\n  async saveContact(cards) {\r\n    // let contact: Contact = this.contacts.create();\r\n\r\n    // contact.name = new ContactName(null, 'Smith', 'John');\r\n    // contact.phoneNumbers = [new ContactField('mobile', '6471234567')];\r\n    // contact.save().then(\r\n    //   async() => await console.log('Contact saved!', contact));\r\n    console.log('save card',cards);\r\n    \r\n\r\n      let contact: Contact = this.contacts.create();\r\n\r\n      contact.name = new ContactName(null, cards.name, cards.surname);\r\n      contact.phoneNumbers = [new ContactField('mobile', cards.cellNo)];\r\n      contact.emails = [new ContactField('emails', cards.email)];\r\n      contact.addresses = [new ContactAddress(true,'work',cards.Workplace)];\r\n\r\n     await contact.save().then(\r\n        () => console.log('Contact saved!', contact),\r\n        (error: any) => console.error('Error saving contact.', error)\r\n      );\r\n  }\r\n\r\n  update(){\r\n    // console.log(this.card['name']);\r\n    if(this.card['name'] == \"\" || this.card['surname'] == \"\" || this.card['Workplace'] == \"\" || this.card['name'] == undefined || this.card['surname'] == undefined || this.card['Workplace'] == undefined ){\r\n      console.log(\"something is missing\");\r\n    }\r\n    else {\r\n      let data = {\r\n        cardId: this.cardid,\r\n          name: this.card['name'],\r\n          surname: this.card['surname'],\r\n          email: this.card['email'],\r\n          cellNo: this.card['cellNo'],\r\n          Workplace: this.card['Workplace'],\r\n          cellNoSharing:this.card['cellNoSharing']\r\n      }\r\n      this.apiService.cardupdate(data)\r\n      .subscribe((data: any) => //Start Service\r\n      {\r\n        console.log(data);\r\n        this.toast.show('Card Updated', '5000', 'center').subscribe(\r\n          toast => {\r\n            console.log(toast);\r\n          }\r\n        );\r\n        this.saveContact(data);\r\n        this.cerrar();\r\n\r\n      },\r\n        err => {\r\n          console.log(err);\r\n          console.log(err.statusText);\r\n        });\r\n\r\n    //  this.route.navigateByUrl('/card-list');\r\n\r\n    }\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}